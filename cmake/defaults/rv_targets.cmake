#
# Copyright (C) 2022  Autodesk, Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

SET(CMAKE_SKIP_RPATH
    ON
)

IF("${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "arm64")
  SET(ARCH
      "ARM64"
      CACHE INTERNAL "CPU Architecture identifier"
  )
ELSE()
  SET(ARCH
      "IA32_64"
      CACHE INTERNAL "CPU Architecture identifier"
  )
ENDIF()

MESSAGE(STATUS "Building for ${ARCH} (CMAKE_HOST_SYSTEM_PROCESSOR = ${CMAKE_HOST_SYSTEM_PROCESSOR})")
ADD_COMPILE_OPTIONS(-DARCH_${ARCH})

MESSAGE(STATUS "Building for ${CMAKE_CXX_BYTE_ORDER} (CMAKE_CXX_BYTE_ORDER)")
ADD_COMPILE_OPTIONS(-DTWK_${CMAKE_CXX_BYTE_ORDER} -D__${CMAKE_CXX_BYTE_ORDER}__)

IF(APPLE)
  SET(RV_TARGET_STRING
      "Darwin"
      CACHE INTERNAL ""
  )

  # Darwin is the name of the mach BSD-base kernel :-)
  SET(RV_TARGET_DARWIN
      BOOL TRUE "Detected target is Apple's macOS"
      CACHE INTERNAL ""
  )

  SET(CMAKE_MACOSX_RPATH
      ON
  )

ELSEIF(UNIX)
  SET(RV_TARGET_STRING
      "Linux"
      CACHE INTERNAL ""
  )

  SET(RV_TARGET_LINUX
      BOOL TRUE "Detected a generic Linux OS"
      CACHE INTERNAL ""
  )

  ADD_COMPILE_OPTIONS(-DTWK_NO_SGI_BYTE_ORDER)

  EXECUTE_PROCESS(
    COMMAND cat /etc/redhat-release
    OUTPUT_VARIABLE RHEL_VERBOSE
    ERROR_QUIET
  )

  IF(RHEL_VERBOSE)
    MESSAGE(STATUS "Redhat Entreprise Linux version: ${RHEL_VERBOSE}")
    STRING(REGEX MATCH "([0-9]+)" RHEL_VERSION_MAJOR "${RHEL_VERBOSE}")
    SET(RV_TARGET_RHEL${RHEL_VERSION_MAJOR}
        BOOL TRUE "Detected a Redhat Entreprise Linux OS"
    )
  ELSE()
    MESSAGE(FATAL_ERROR "Unknown or unsupported Linux distribution version; stopping configuration!")
  ENDIF()
ELSEIF(WIN32)
  SET(RV_TARGET_STRING
      "Windows"
      CACHE INTERNAL ""
  )

  ADD_COMPILE_OPTIONS(-DTWK_NO_SGI_BYTE_ORDER)
ELSE()
  MESSAGE(FATAL_ERROR "Unsupported platform")
ENDIF()

STRING(TOUPPER "${RV_TARGET_STRING}" PLATFORM)
ADD_COMPILE_OPTIONS(-DPLATFORM_${PLATFORM})

SET(RV_TARGET_${PLATFORM}
    BOOL TRUE
    CACHE INTERNAL ""
)

ADD_COMPILE_OPTIONS(-DPLATFORM_OPENGL -DGL_SILENCE_DEPRECATION -DGL_GLEXT_PROTOTYPES)

ADD_COMPILE_OPTIONS(-DPLATFORM_STRING=\"${RV_TARGET_STRING}\")
